import { app, BrowserWindow, globalShortcut, Tray, Menu } from 'electron';
import { exec } from 'child_process';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

let tray: Tray | null = null

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

const createWindow = (): void => {
  const mainWindow = new BrowserWindow({
    height: 500,
    width: 400,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  });

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);
};

app.on('ready', () => {
  app.dock.hide();

  globalShortcut.register('Option+CommandOrControl+P', () => {
    const command = `do shell script "code -n"`;

    exec(`osascript -e '${command}'`);

    console.log('ok');
  });

  const menu = Menu.buildFromTemplate([
    { label: 'Test', click: () => console.log('click'), accelerator: 'Command+U' },
    { role: 'quit', label: 'Quit Commands', accelerator: 'Command+Q' },
  ])

  if (!tray) {
    tray = new Tray('src/icon.png')
  }

  tray.setContextMenu(menu)

  createWindow();
});

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});
